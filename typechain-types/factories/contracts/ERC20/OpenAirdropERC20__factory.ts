/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  BigNumberish,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type {
  OpenAirdropERC20,
  OpenAirdropERC20Interface,
} from "../../../contracts/ERC20/OpenAirdropERC20";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "airdropName",
        type: "string",
      },
      {
        internalType: "address",
        name: "initialOwner",
        type: "address",
      },
      {
        internalType: "address",
        name: "tokenAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "totalAirdropAmount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "claimAmount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "expirationDate",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "OwnableInvalidOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "OwnableUnauthorizedAccount",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "allowedAddress",
        type: "address",
      },
    ],
    name: "AddressAllowed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "disallowedAddress",
        type: "address",
      },
    ],
    name: "AddressDisallowed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Claim",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "bytes32[]",
        name: "proof",
        type: "bytes32[]",
      },
    ],
    name: "claim",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getAirdropAmountLeft",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getAirdropInfo",
    outputs: [
      {
        components: [
          {
            internalType: "string",
            name: "airdropName",
            type: "string",
          },
          {
            internalType: "address",
            name: "airdropAddress",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "totalAirdropAmount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "airdropAmountLeft",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "claimAmount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "expirationDate",
            type: "uint256",
          },
          {
            internalType: "enum AirdropType",
            name: "airdropType",
            type: "uint8",
          },
          {
            internalType: "string",
            name: "uri",
            type: "string",
          },
        ],
        internalType: "struct AirdropInfo",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getBalance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getClaimAmount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getExpirationDate",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getTotalAirdropAmount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "hasBalanceToClaim",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "hasBeenTotallyClaimed",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_address",
        type: "address",
      },
    ],
    name: "hasClaimed",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "hasExpired",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
    ],
    name: "isAllowed",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60806040523480156200001157600080fd5b5060405162001d3738038062001d3783398181016040528101906200003791906200045f565b84600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603620000ad5760006040517f1e4fbdf7000000000000000000000000000000000000000000000000000000008152600401620000a491906200052b565b60405180910390fd5b620000be816200016860201b60201c565b5083600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550856006908162000111919062000789565b50826002819055508260038190555081600481905550806005819055506002600760006101000a81548160ff0219169083600281111562000157576200015662000870565b5b02179055505050505050506200089f565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b6000604051905090565b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b62000295826200024a565b810181811067ffffffffffffffff82111715620002b757620002b66200025b565b5b80604052505050565b6000620002cc6200022c565b9050620002da82826200028a565b919050565b600067ffffffffffffffff821115620002fd57620002fc6200025b565b5b62000308826200024a565b9050602081019050919050565b60005b838110156200033557808201518184015260208101905062000318565b60008484015250505050565b6000620003586200035284620002df565b620002c0565b90508281526020810184848401111562000377576200037662000245565b5b6200038484828562000315565b509392505050565b600082601f830112620003a457620003a362000240565b5b8151620003b684826020860162000341565b91505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620003ec82620003bf565b9050919050565b620003fe81620003df565b81146200040a57600080fd5b50565b6000815190506200041e81620003f3565b92915050565b6000819050919050565b620004398162000424565b81146200044557600080fd5b50565b60008151905062000459816200042e565b92915050565b60008060008060008060c087890312156200047f576200047e62000236565b5b600087015167ffffffffffffffff811115620004a0576200049f6200023b565b5b620004ae89828a016200038c565b9650506020620004c189828a016200040d565b9550506040620004d489828a016200040d565b9450506060620004e789828a0162000448565b9350506080620004fa89828a0162000448565b92505060a06200050d89828a0162000448565b9150509295509295509295565b6200052581620003df565b82525050565b60006020820190506200054260008301846200051a565b92915050565b600081519050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806200059b57607f821691505b602082108103620005b157620005b062000553565b5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b6000600883026200061b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82620005dc565b620006278683620005dc565b95508019841693508086168417925050509392505050565b6000819050919050565b60006200066a620006646200065e8462000424565b6200063f565b62000424565b9050919050565b6000819050919050565b620006868362000649565b6200069e620006958262000671565b848454620005e9565b825550505050565b600090565b620006b5620006a6565b620006c28184846200067b565b505050565b5b81811015620006ea57620006de600082620006ab565b600181019050620006c8565b5050565b601f82111562000739576200070381620005b7565b6200070e84620005cc565b810160208510156200071e578190505b620007366200072d85620005cc565b830182620006c7565b50505b505050565b600082821c905092915050565b60006200075e600019846008026200073e565b1980831691505092915050565b60006200077983836200074b565b9150826002028217905092915050565b620007948262000548565b67ffffffffffffffff811115620007b057620007af6200025b565b5b620007bc825462000582565b620007c9828285620006ee565b600060209050601f831160018114620008015760008415620007ec578287015190505b620007f885826200076b565b86555062000868565b601f1984166200081186620005b7565b60005b828110156200083b5784890151825560018201915060208501945060208101905062000814565b868310156200085b578489015162000857601f8916826200074b565b8355505b6001600288020188555050505b505050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b61148880620008af6000396000f3fe608060405234801561001057600080fd5b50600436106100f55760003560e01c8063715018a6116100975780639592a2cd116100665780639592a2cd14610240578063babcc5391461025e578063cd61a6091461028e578063f2fde38b146102ac576100f5565b8063715018a6146101ca57806373b2e80e146101d45780638da5cb5b1461020457806390e64d1314610222576100f5565b80633d13f874116100d35780633d13f8741461015457806343f367c8146101705780635edf7d8b1461018e57806371127ed2146101ac576100f5565b806301cb54c0146100fa57806312065fe01461011857806332f0887314610136575b600080fd5b6101026102c8565b60405161010f9190610b6c565b60405180910390f35b610120610370565b60405161012d9190610ba0565b60405180910390f35b61013e610413565b60405161014b9190610dc9565b60405180910390f35b61016e60048036038101906101699190610ebc565b6105be565b005b61017861082b565b6040516101859190610ba0565b60405180910390f35b610196610835565b6040516101a39190610ba0565b60405180910390f35b6101b461083f565b6040516101c19190610ba0565b60405180910390f35b6101d2610849565b005b6101ee60048036038101906101e99190610f30565b61085d565b6040516101fb9190610b6c565b60405180910390f35b61020c6108b3565b6040516102199190610f6c565b60405180910390f35b61022a6108dc565b6040516102379190610b6c565b60405180910390f35b6102486108e8565b6040516102559190610b6c565b60405180910390f35b61027860048036038101906102739190610f30565b6108f6565b6040516102859190610b6c565b60405180910390f35b610296610901565b6040516102a39190610ba0565b60405180910390f35b6102c660048036038101906102c19190610f30565b61090b565b005b6000600454600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016103289190610f6c565b602060405180830381865afa158015610345573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103699190610f9c565b1015905090565b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016103cd9190610f6c565b602060405180830381865afa1580156103ea573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061040e9190610f9c565b905090565b61041b610ae4565b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16634e16fc8b6040518163ffffffff1660e01b8152600401600060405180830381865afa15801561048a573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f820116820180604052508101906104b391906110ea565b9050604051806101000160405280600680546104ce90611162565b80601f01602080910402602001604051908101604052809291908181526020018280546104fa90611162565b80156105475780601f1061051c57610100808354040283529160200191610547565b820191906000526020600020905b81548152906001019060200180831161052a57829003601f168201915b505050505081526020013073ffffffffffffffffffffffffffffffffffffffff1681526020016002548152602001600354815260200160045481526020016005548152602001600760009054906101000a900460ff1660028111156105af576105ae610c9b565b5b81526020018281525091505090565b6105c6610991565b6105ce6108dc565b1561060e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610605906111f0565b60405180910390fd5b6106178461085d565b15610657576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161064e90611282565b60405180910390fd5b61065f6108e8565b1561069f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161069690611314565b60405180910390fd5b6106a76102c8565b6106e6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106dd906113a6565b60405180910390fd5b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb856004546040518363ffffffff1660e01b81526004016107459291906113c6565b600060405180830381600087803b15801561075f57600080fd5b505af1158015610773573d6000803e3d6000fd5b505050506004546003600082825461078b919061141e565b925050819055506001600960008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055507f47cee97cb7acd717b3c0aa1435d004cd5b3c8c57d70dbceb4e4458bbd60e39d48460045460405161081d9291906113c6565b60405180910390a150505050565b6000600254905090565b6000600554905090565b6000600454905090565b610851610991565b61085b6000610a18565b565b6000600960008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff169050919050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60004260055410905090565b600060045460035410905090565b600060019050919050565b6000600354905090565b610913610991565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036109855760006040517f1e4fbdf700000000000000000000000000000000000000000000000000000000815260040161097c9190610f6c565b60405180910390fd5b61098e81610a18565b50565b610999610adc565b73ffffffffffffffffffffffffffffffffffffffff166109b76108b3565b73ffffffffffffffffffffffffffffffffffffffff1614610a16576109da610adc565b6040517f118cdaa7000000000000000000000000000000000000000000000000000000008152600401610a0d9190610f6c565b60405180910390fd5b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600033905090565b60405180610100016040528060608152602001600073ffffffffffffffffffffffffffffffffffffffff1681526020016000815260200160008152602001600081526020016000815260200160006002811115610b4457610b43610c9b565b5b8152602001606081525090565b60008115159050919050565b610b6681610b51565b82525050565b6000602082019050610b816000830184610b5d565b92915050565b6000819050919050565b610b9a81610b87565b82525050565b6000602082019050610bb56000830184610b91565b92915050565b600081519050919050565b600082825260208201905092915050565b60005b83811015610bf5578082015181840152602081019050610bda565b60008484015250505050565b6000601f19601f8301169050919050565b6000610c1d82610bbb565b610c278185610bc6565b9350610c37818560208601610bd7565b610c4081610c01565b840191505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610c7682610c4b565b9050919050565b610c8681610c6b565b82525050565b610c9581610b87565b82525050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b60038110610cdb57610cda610c9b565b5b50565b6000819050610cec82610cca565b919050565b6000610cfc82610cde565b9050919050565b610d0c81610cf1565b82525050565b6000610100830160008301518482036000860152610d308282610c12565b9150506020830151610d456020860182610c7d565b506040830151610d586040860182610c8c565b506060830151610d6b6060860182610c8c565b506080830151610d7e6080860182610c8c565b5060a0830151610d9160a0860182610c8c565b5060c0830151610da460c0860182610d03565b5060e083015184820360e0860152610dbc8282610c12565b9150508091505092915050565b60006020820190508181036000830152610de38184610d12565b905092915050565b6000604051905090565b600080fd5b600080fd5b610e0881610c6b565b8114610e1357600080fd5b50565b600081359050610e2581610dff565b92915050565b610e3481610b87565b8114610e3f57600080fd5b50565b600081359050610e5181610e2b565b92915050565b600080fd5b600080fd5b600080fd5b60008083601f840112610e7c57610e7b610e57565b5b8235905067ffffffffffffffff811115610e9957610e98610e5c565b5b602083019150836020820283011115610eb557610eb4610e61565b5b9250929050565b60008060008060608587031215610ed657610ed5610df5565b5b6000610ee487828801610e16565b9450506020610ef587828801610e42565b935050604085013567ffffffffffffffff811115610f1657610f15610dfa565b5b610f2287828801610e66565b925092505092959194509250565b600060208284031215610f4657610f45610df5565b5b6000610f5484828501610e16565b91505092915050565b610f6681610c6b565b82525050565b6000602082019050610f816000830184610f5d565b92915050565b600081519050610f9681610e2b565b92915050565b600060208284031215610fb257610fb1610df5565b5b6000610fc084828501610f87565b91505092915050565b600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b61100682610c01565b810181811067ffffffffffffffff8211171561102557611024610fce565b5b80604052505050565b6000611038610deb565b90506110448282610ffd565b919050565b600067ffffffffffffffff82111561106457611063610fce565b5b61106d82610c01565b9050602081019050919050565b600061108d61108884611049565b61102e565b9050828152602081018484840111156110a9576110a8610fc9565b5b6110b4848285610bd7565b509392505050565b600082601f8301126110d1576110d0610e57565b5b81516110e184826020860161107a565b91505092915050565b600060208284031215611100576110ff610df5565b5b600082015167ffffffffffffffff81111561111e5761111d610dfa565b5b61112a848285016110bc565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000600282049050600182168061117a57607f821691505b60208210810361118d5761118c611133565b5b50919050565b600082825260208201905092915050565b7f41697264726f7020616c726561647920657870697265642e0000000000000000600082015250565b60006111da601883611193565b91506111e5826111a4565b602082019050919050565b60006020820190508181036000830152611209816111cd565b9050919050565b7f4164647265737320616c726561647920636c61696d656420746869732061697260008201527f64726f702e000000000000000000000000000000000000000000000000000000602082015250565b600061126c602583611193565b915061127782611210565b604082019050919050565b6000602082019050818103600083015261129b8161125f565b9050919050565b7f41697264726f7020686173206265656e20746f74616c6c7920636c61696d656460008201527f20616c72656164792e0000000000000000000000000000000000000000000000602082015250565b60006112fe602983611193565b9150611309826112a2565b604082019050919050565b6000602082019050818103600083015261132d816112f1565b9050919050565b7f41697264726f7020636f6e74726163742068617320696e73756666696369656e60008201527f7420746f6b656e2062616c616e63652e00000000000000000000000000000000602082015250565b6000611390603083611193565b915061139b82611334565b604082019050919050565b600060208201905081810360008301526113bf81611383565b9050919050565b60006040820190506113db6000830185610f5d565b6113e86020830184610b91565b9392505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061142982610b87565b915061143483610b87565b925082820390508181111561144c5761144b6113ef565b5b9291505056fea26469706673582212200ec67a5ad8db96721af24ba21c8e0d1dce7b73c8acea2e09dcddcc7092a7c0e664736f6c63430008180033";

type OpenAirdropERC20ConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: OpenAirdropERC20ConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class OpenAirdropERC20__factory extends ContractFactory {
  constructor(...args: OpenAirdropERC20ConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    airdropName: string,
    initialOwner: AddressLike,
    tokenAddress: AddressLike,
    totalAirdropAmount: BigNumberish,
    claimAmount: BigNumberish,
    expirationDate: BigNumberish,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(
      airdropName,
      initialOwner,
      tokenAddress,
      totalAirdropAmount,
      claimAmount,
      expirationDate,
      overrides || {}
    );
  }
  override deploy(
    airdropName: string,
    initialOwner: AddressLike,
    tokenAddress: AddressLike,
    totalAirdropAmount: BigNumberish,
    claimAmount: BigNumberish,
    expirationDate: BigNumberish,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(
      airdropName,
      initialOwner,
      tokenAddress,
      totalAirdropAmount,
      claimAmount,
      expirationDate,
      overrides || {}
    ) as Promise<
      OpenAirdropERC20 & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): OpenAirdropERC20__factory {
    return super.connect(runner) as OpenAirdropERC20__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): OpenAirdropERC20Interface {
    return new Interface(_abi) as OpenAirdropERC20Interface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): OpenAirdropERC20 {
    return new Contract(address, _abi, runner) as unknown as OpenAirdropERC20;
  }
}
