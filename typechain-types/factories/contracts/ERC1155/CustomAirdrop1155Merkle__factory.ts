/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  BigNumberish,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type {
  CustomAirdrop1155Merkle,
  CustomAirdrop1155MerkleInterface,
} from "../../../contracts/ERC1155/CustomAirdrop1155Merkle";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "airdropName",
        type: "string",
      },
      {
        internalType: "address",
        name: "initialOwner",
        type: "address",
      },
      {
        internalType: "address",
        name: "tokenAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "totalAirdropAmount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "expirationDate",
        type: "uint256",
      },
      {
        internalType: "enum AirdropType",
        name: "airdropType",
        type: "uint8",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "InvalidProof",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "OwnableInvalidOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "OwnableUnauthorizedAccount",
    type: "error",
  },
  {
    inputs: [],
    name: "UsedLeaf",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Claim",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "bytes32[]",
        name: "proof",
        type: "bytes32[]",
      },
    ],
    name: "claim",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "claimedLeaf",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getAirdropAmountLeft",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getAirdropInfo",
    outputs: [
      {
        components: [
          {
            internalType: "string",
            name: "airdropName",
            type: "string",
          },
          {
            internalType: "address",
            name: "airdropAddress",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "totalAirdropAmount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "airdropAmountLeft",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "claimAmount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "expirationDate",
            type: "uint256",
          },
          {
            internalType: "enum AirdropType",
            name: "airdropType",
            type: "uint8",
          },
          {
            internalType: "string",
            name: "uri",
            type: "string",
          },
        ],
        internalType: "struct AirdropInfo",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getBalance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getExpirationDate",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getTotalAirdropAmount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getUri",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "hasBeenTotallyClaimed",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_address",
        type: "address",
      },
    ],
    name: "hasClaimed",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "hasExpired",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "onERC1155Received",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "root",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_root",
        type: "bytes32",
      },
    ],
    name: "setRoot",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60806040523480156200001157600080fd5b506040516200200338038062002003833981810160405281019062000037919062000487565b85600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603620000ad5760006040517f1e4fbdf7000000000000000000000000000000000000000000000000000000008152600401620000a491906200056a565b60405180910390fd5b620000be816200016860201b60201c565b5084600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508660079081620001119190620007c8565b508360068190555082600281905550826003819055508160058190555080600860006101000a81548160ff02191690836002811115620001565762000155620008af565b5b021790555050505050505050620008de565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b6000604051905090565b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b62000295826200024a565b810181811067ffffffffffffffff82111715620002b757620002b66200025b565b5b80604052505050565b6000620002cc6200022c565b9050620002da82826200028a565b919050565b600067ffffffffffffffff821115620002fd57620002fc6200025b565b5b62000308826200024a565b9050602081019050919050565b60005b838110156200033557808201518184015260208101905062000318565b60008484015250505050565b6000620003586200035284620002df565b620002c0565b90508281526020810184848401111562000377576200037662000245565b5b6200038484828562000315565b509392505050565b600082601f830112620003a457620003a362000240565b5b8151620003b684826020860162000341565b91505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620003ec82620003bf565b9050919050565b620003fe81620003df565b81146200040a57600080fd5b50565b6000815190506200041e81620003f3565b92915050565b6000819050919050565b620004398162000424565b81146200044557600080fd5b50565b60008151905062000459816200042e565b92915050565b600381106200046d57600080fd5b50565b60008151905062000481816200045f565b92915050565b600080600080600080600060e0888a031215620004a957620004a862000236565b5b600088015167ffffffffffffffff811115620004ca57620004c96200023b565b5b620004d88a828b016200038c565b9750506020620004eb8a828b016200040d565b9650506040620004fe8a828b016200040d565b9550506060620005118a828b0162000448565b9450506080620005248a828b0162000448565b93505060a0620005378a828b0162000448565b92505060c06200054a8a828b0162000470565b91505092959891949750929550565b6200056481620003df565b82525050565b600060208201905062000581600083018462000559565b92915050565b600081519050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680620005da57607f821691505b602082108103620005f057620005ef62000592565b5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b6000600883026200065a7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff826200061b565b6200066686836200061b565b95508019841693508086168417925050509392505050565b6000819050919050565b6000620006a9620006a36200069d8462000424565b6200067e565b62000424565b9050919050565b6000819050919050565b620006c58362000688565b620006dd620006d482620006b0565b84845462000628565b825550505050565b600090565b620006f4620006e5565b62000701818484620006ba565b505050565b5b8181101562000729576200071d600082620006ea565b60018101905062000707565b5050565b601f82111562000778576200074281620005f6565b6200074d846200060b565b810160208510156200075d578190505b620007756200076c856200060b565b83018262000706565b50505b505050565b600082821c905092915050565b60006200079d600019846008026200077d565b1980831691505092915050565b6000620007b883836200078a565b9150826002028217905092915050565b620007d38262000587565b67ffffffffffffffff811115620007ef57620007ee6200025b565b5b620007fb8254620005c1565b620008088282856200072d565b600060209050601f8311600181146200084057600084156200082b578287015190505b620008378582620007aa565b865550620008a7565b601f1984166200085086620005f6565b60005b828110156200087a5784890151825560018201915060208501945060208101905062000853565b868310156200089a578489015162000896601f8916826200078a565b8355505b6001600288020188555050505b505050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b61171580620008ee6000396000f3fe608060405234801561001057600080fd5b506004361061010b5760003560e01c806380bdc421116100a2578063cd61a60911610071578063cd61a60914610286578063dab5f340146102a4578063ebf0c717146102c0578063f23a6e61146102de578063f2fde38b1461030e5761010b565b806380bdc421146101fc5780638da5cb5b1461022c57806390e64d131461024a5780639592a2cd146102685761010b565b80634e16fc8b116100de5780634e16fc8b146101865780635edf7d8b146101a4578063715018a6146101c257806373b2e80e146101cc5761010b565b806312065fe01461011057806332f088731461012e5780633d13f8741461014c57806343f367c814610168575b600080fd5b61011861032a565b6040516101259190610c86565b60405180910390f35b6101366103d0565b6040516101439190610eaf565b60405180910390f35b61016660048036038101906101619190610fa2565b6104ee565b005b610170610508565b60405161017d9190610c86565b60405180910390f35b61018e610512565b60405161019b9190611060565b60405180910390f35b6101ac61054f565b6040516101b99190610c86565b60405180910390f35b6101ca610559565b005b6101e660048036038101906101e19190611082565b61056d565b6040516101f391906110ca565b60405180910390f35b6102166004803603810190610211919061111b565b6105c3565b60405161022391906110ca565b60405180910390f35b6102346105e3565b6040516102419190611157565b60405180910390f35b61025261060c565b60405161025f91906110ca565b60405180910390f35b610270610618565b60405161027d91906110ca565b60405180910390f35b61028e610625565b60405161029b9190610c86565b60405180910390f35b6102be60048036038101906102b9919061111b565b61062f565b005b6102c8610641565b6040516102d59190611181565b60405180910390f35b6102f860048036038101906102f391906112cc565b610647565b604051610305919061139e565b60405180910390f35b61032860048036038101906103239190611082565b610675565b005b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1662fdd58e306006546040518363ffffffff1660e01b815260040161038a9291906113b9565b602060405180830381865afa1580156103a7573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103cb91906113f7565b905090565b6103d8610c00565b604051806101000160405280600780546103f190611453565b80601f016020809104026020016040519081016040528092919081815260200182805461041d90611453565b801561046a5780601f1061043f5761010080835404028352916020019161046a565b820191906000526020600020905b81548152906001019060200180831161044d57829003601f168201915b505050505081526020013073ffffffffffffffffffffffffffffffffffffffff16815260200160025481526020016003548152602001600081526020016005548152602001600860009054906101000a900460ff1660028111156104d1576104d0610d81565b5b815260200160405180602001604052806000815250815250905090565b6104f66106fb565b61050284848484610782565b50505050565b6000600254905090565b60606040518060400160405280600f81526020017f6e6f7420696d706c656d656e7465640000000000000000000000000000000000815250905090565b6000600554905090565b6105616106fb565b61056b6000610a2e565b565b6000600a60008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff169050919050565b600b6020528060005260406000206000915054906101000a900460ff1681565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60004260055410905090565b6000600160035410905090565b6000600354905090565b6106376106fb565b8060098190555050565b60095481565b60007ff23a6e612e1ff4830e658fe43f4e3cb4a5f8170bd5d9e69fb5d7a7fa9e4fdf97905095945050505050565b61067d6106fb565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036106ef5760006040517f1e4fbdf70000000000000000000000000000000000000000000000000000000081526004016106e69190611157565b60405180910390fd5b6106f881610a2e565b50565b610703610af2565b73ffffffffffffffffffffffffffffffffffffffff166107216105e3565b73ffffffffffffffffffffffffffffffffffffffff161461078057610744610af2565b6040517f118cdaa70000000000000000000000000000000000000000000000000000000081526004016107779190611157565b60405180910390fd5b565b600061078e8585610afa565b905061079e838360095484610b53565b6107d4576040517f09bde33900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600b600082815260200190815260200160002060009054906101000a900460ff161561082c576040517fc0ab2c9f00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6001600b600083815260200190815260200160002060006101000a81548160ff02191690831515021790555061086061060c565b156108a0576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610897906114d0565b60405180910390fd5b6108a8610618565b156108e8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108df90611562565b60405180910390fd5b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663f242432a3087600654886040518563ffffffff1660e01b815260040161094b94939291906115b9565b600060405180830381600087803b15801561096557600080fd5b505af1158015610979573d6000803e3d6000fd5b50505050836003600082825461098f9190611640565b925050819055506001600a60008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055507f47cee97cb7acd717b3c0aa1435d004cd5b3c8c57d70dbceb4e4458bbd60e39d48585604051610a1f9291906113b9565b60405180910390a15050505050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600033905090565b60008282604051602001610b0f9291906113b9565b60405160208183030381529060405280519060200120604051602001610b359190611695565b60405160208183030381529060405280519060200120905092915050565b600082610b61868685610b6c565b149050949350505050565b60008082905060005b85859050811015610bb257610ba382878784818110610b9757610b966116b0565b5b90506020020135610bbe565b91508080600101915050610b75565b50809150509392505050565b6000818310610bd657610bd18284610be9565b610be1565b610be08383610be9565b5b905092915050565b600082600052816020526040600020905092915050565b60405180610100016040528060608152602001600073ffffffffffffffffffffffffffffffffffffffff1681526020016000815260200160008152602001600081526020016000815260200160006002811115610c6057610c5f610d81565b5b8152602001606081525090565b6000819050919050565b610c8081610c6d565b82525050565b6000602082019050610c9b6000830184610c77565b92915050565b600081519050919050565b600082825260208201905092915050565b60005b83811015610cdb578082015181840152602081019050610cc0565b60008484015250505050565b6000601f19601f8301169050919050565b6000610d0382610ca1565b610d0d8185610cac565b9350610d1d818560208601610cbd565b610d2681610ce7565b840191505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610d5c82610d31565b9050919050565b610d6c81610d51565b82525050565b610d7b81610c6d565b82525050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b60038110610dc157610dc0610d81565b5b50565b6000819050610dd282610db0565b919050565b6000610de282610dc4565b9050919050565b610df281610dd7565b82525050565b6000610100830160008301518482036000860152610e168282610cf8565b9150506020830151610e2b6020860182610d63565b506040830151610e3e6040860182610d72565b506060830151610e516060860182610d72565b506080830151610e646080860182610d72565b5060a0830151610e7760a0860182610d72565b5060c0830151610e8a60c0860182610de9565b5060e083015184820360e0860152610ea28282610cf8565b9150508091505092915050565b60006020820190508181036000830152610ec98184610df8565b905092915050565b6000604051905090565b600080fd5b600080fd5b610eee81610d51565b8114610ef957600080fd5b50565b600081359050610f0b81610ee5565b92915050565b610f1a81610c6d565b8114610f2557600080fd5b50565b600081359050610f3781610f11565b92915050565b600080fd5b600080fd5b600080fd5b60008083601f840112610f6257610f61610f3d565b5b8235905067ffffffffffffffff811115610f7f57610f7e610f42565b5b602083019150836020820283011115610f9b57610f9a610f47565b5b9250929050565b60008060008060608587031215610fbc57610fbb610edb565b5b6000610fca87828801610efc565b9450506020610fdb87828801610f28565b935050604085013567ffffffffffffffff811115610ffc57610ffb610ee0565b5b61100887828801610f4c565b925092505092959194509250565b600082825260208201905092915050565b600061103282610ca1565b61103c8185611016565b935061104c818560208601610cbd565b61105581610ce7565b840191505092915050565b6000602082019050818103600083015261107a8184611027565b905092915050565b60006020828403121561109857611097610edb565b5b60006110a684828501610efc565b91505092915050565b60008115159050919050565b6110c4816110af565b82525050565b60006020820190506110df60008301846110bb565b92915050565b6000819050919050565b6110f8816110e5565b811461110357600080fd5b50565b600081359050611115816110ef565b92915050565b60006020828403121561113157611130610edb565b5b600061113f84828501611106565b91505092915050565b61115181610d51565b82525050565b600060208201905061116c6000830184611148565b92915050565b61117b816110e5565b82525050565b60006020820190506111966000830184611172565b92915050565b600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6111d982610ce7565b810181811067ffffffffffffffff821117156111f8576111f76111a1565b5b80604052505050565b600061120b610ed1565b905061121782826111d0565b919050565b600067ffffffffffffffff821115611237576112366111a1565b5b61124082610ce7565b9050602081019050919050565b82818337600083830152505050565b600061126f61126a8461121c565b611201565b90508281526020810184848401111561128b5761128a61119c565b5b61129684828561124d565b509392505050565b600082601f8301126112b3576112b2610f3d565b5b81356112c384826020860161125c565b91505092915050565b600080600080600060a086880312156112e8576112e7610edb565b5b60006112f688828901610efc565b955050602061130788828901610efc565b945050604061131888828901610f28565b935050606061132988828901610f28565b925050608086013567ffffffffffffffff81111561134a57611349610ee0565b5b6113568882890161129e565b9150509295509295909350565b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b61139881611363565b82525050565b60006020820190506113b3600083018461138f565b92915050565b60006040820190506113ce6000830185611148565b6113db6020830184610c77565b9392505050565b6000815190506113f181610f11565b92915050565b60006020828403121561140d5761140c610edb565b5b600061141b848285016113e2565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000600282049050600182168061146b57607f821691505b60208210810361147e5761147d611424565b5b50919050565b7f41697264726f7020616c726561647920657870697265642e0000000000000000600082015250565b60006114ba601883611016565b91506114c582611484565b602082019050919050565b600060208201905081810360008301526114e9816114ad565b9050919050565b7f41697264726f7020686173206265656e20746f74616c6c7920636c61696d656460008201527f20616c72656164792e0000000000000000000000000000000000000000000000602082015250565b600061154c602983611016565b9150611557826114f0565b604082019050919050565b6000602082019050818103600083015261157b8161153f565b9050919050565b600082825260208201905092915050565b50565b60006115a3600083611582565b91506115ae82611593565b600082019050919050565b600060a0820190506115ce6000830187611148565b6115db6020830186611148565b6115e86040830185610c77565b6115f56060830184610c77565b818103608083015261160681611596565b905095945050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061164b82610c6d565b915061165683610c6d565b925082820390508181111561166e5761166d611611565b5b92915050565b6000819050919050565b61168f61168a826110e5565b611674565b82525050565b60006116a1828461167e565b60208201915081905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fdfea2646970667358221220c89d20e715bb8b1741d20dd3617fd1af69293dba68a2aac4954cf6a82d0bd78764736f6c63430008180033";

type CustomAirdrop1155MerkleConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: CustomAirdrop1155MerkleConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class CustomAirdrop1155Merkle__factory extends ContractFactory {
  constructor(...args: CustomAirdrop1155MerkleConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    airdropName: string,
    initialOwner: AddressLike,
    tokenAddress: AddressLike,
    tokenId: BigNumberish,
    totalAirdropAmount: BigNumberish,
    expirationDate: BigNumberish,
    airdropType: BigNumberish,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(
      airdropName,
      initialOwner,
      tokenAddress,
      tokenId,
      totalAirdropAmount,
      expirationDate,
      airdropType,
      overrides || {}
    );
  }
  override deploy(
    airdropName: string,
    initialOwner: AddressLike,
    tokenAddress: AddressLike,
    tokenId: BigNumberish,
    totalAirdropAmount: BigNumberish,
    expirationDate: BigNumberish,
    airdropType: BigNumberish,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(
      airdropName,
      initialOwner,
      tokenAddress,
      tokenId,
      totalAirdropAmount,
      expirationDate,
      airdropType,
      overrides || {}
    ) as Promise<
      CustomAirdrop1155Merkle & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(
    runner: ContractRunner | null
  ): CustomAirdrop1155Merkle__factory {
    return super.connect(runner) as CustomAirdrop1155Merkle__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): CustomAirdrop1155MerkleInterface {
    return new Interface(_abi) as CustomAirdrop1155MerkleInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): CustomAirdrop1155Merkle {
    return new Contract(
      address,
      _abi,
      runner
    ) as unknown as CustomAirdrop1155Merkle;
  }
}
