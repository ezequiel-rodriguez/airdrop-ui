/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  BigNumberish,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type {
  CustomAirdrop1155,
  CustomAirdrop1155Interface,
} from "../../../contracts/ERC1155/CustomAirdrop1155";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "airdropName",
        type: "string",
      },
      {
        internalType: "address",
        name: "initialOwner",
        type: "address",
      },
      {
        internalType: "address",
        name: "tokenAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "totalAirdropAmount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "claimAmount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "expirationDate",
        type: "uint256",
      },
      {
        internalType: "enum AirdropType",
        name: "airdropType",
        type: "uint8",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "OwnableInvalidOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "OwnableUnauthorizedAccount",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "allowedAddress",
        type: "address",
      },
    ],
    name: "AddressAllowed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "disallowedAddress",
        type: "address",
      },
    ],
    name: "AddressDisallowed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Claim",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_address",
        type: "address",
      },
    ],
    name: "allowAddress",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "addresses",
        type: "address[]",
      },
    ],
    name: "allowAddresses",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "bytes32[]",
        name: "proof",
        type: "bytes32[]",
      },
    ],
    name: "claim",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_address",
        type: "address",
      },
    ],
    name: "disallowAddress",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "addresses",
        type: "address[]",
      },
    ],
    name: "disallowAddresses",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getAirdropAmountLeft",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getAirdropInfo",
    outputs: [
      {
        components: [
          {
            internalType: "string",
            name: "airdropName",
            type: "string",
          },
          {
            internalType: "address",
            name: "airdropAddress",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "totalAirdropAmount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "airdropAmountLeft",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "claimAmount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "expirationDate",
            type: "uint256",
          },
          {
            internalType: "enum AirdropType",
            name: "airdropType",
            type: "uint8",
          },
          {
            internalType: "string",
            name: "uri",
            type: "string",
          },
        ],
        internalType: "struct AirdropInfo",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getBalance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getClaimAmount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getExpirationDate",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getTotalAirdropAmount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getUri",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "hasBalanceToClaim",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "hasBeenTotallyClaimed",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_address",
        type: "address",
      },
    ],
    name: "hasClaimed",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "hasExpired",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_address",
        type: "address",
      },
    ],
    name: "isAllowed",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "onERC1155Received",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60806040523480156200001157600080fd5b50604051620025803803806200258083398181016040528101906200003791906200048f565b86600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603620000ad5760006040517f1e4fbdf7000000000000000000000000000000000000000000000000000000008152600401620000a4919062000588565b60405180910390fd5b620000be816200017060201b60201c565b5085600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508760079081620001119190620007e6565b50846006819055508360028190555083600381905550826004819055508160058190555080600860006101000a81548160ff021916908360028111156200015d576200015c620008cd565b5b02179055505050505050505050620008fc565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b6000604051905090565b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6200029d8262000252565b810181811067ffffffffffffffff82111715620002bf57620002be62000263565b5b80604052505050565b6000620002d462000234565b9050620002e2828262000292565b919050565b600067ffffffffffffffff82111562000305576200030462000263565b5b620003108262000252565b9050602081019050919050565b60005b838110156200033d57808201518184015260208101905062000320565b60008484015250505050565b6000620003606200035a84620002e7565b620002c8565b9050828152602081018484840111156200037f576200037e6200024d565b5b6200038c8482856200031d565b509392505050565b600082601f830112620003ac57620003ab62000248565b5b8151620003be84826020860162000349565b91505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620003f482620003c7565b9050919050565b6200040681620003e7565b81146200041257600080fd5b50565b6000815190506200042681620003fb565b92915050565b6000819050919050565b62000441816200042c565b81146200044d57600080fd5b50565b600081519050620004618162000436565b92915050565b600381106200047557600080fd5b50565b600081519050620004898162000467565b92915050565b600080600080600080600080610100898b031215620004b357620004b26200023e565b5b600089015167ffffffffffffffff811115620004d457620004d362000243565b5b620004e28b828c0162000394565b9850506020620004f58b828c0162000415565b9750506040620005088b828c0162000415565b96505060606200051b8b828c0162000450565b95505060806200052e8b828c0162000450565b94505060a0620005418b828c0162000450565b93505060c0620005548b828c0162000450565b92505060e0620005678b828c0162000478565b9150509295985092959890939650565b6200058281620003e7565b82525050565b60006020820190506200059f600083018462000577565b92915050565b600081519050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680620005f857607f821691505b6020821081036200060e576200060d620005b0565b5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b600060088302620006787fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8262000639565b62000684868362000639565b95508019841693508086168417925050509392505050565b6000819050919050565b6000620006c7620006c1620006bb846200042c565b6200069c565b6200042c565b9050919050565b6000819050919050565b620006e383620006a6565b620006fb620006f282620006ce565b84845462000646565b825550505050565b600090565b6200071262000703565b6200071f818484620006d8565b505050565b5b8181101562000747576200073b60008262000708565b60018101905062000725565b5050565b601f8211156200079657620007608162000614565b6200076b8462000629565b810160208510156200077b578190505b620007936200078a8562000629565b83018262000724565b50505b505050565b600082821c905092915050565b6000620007bb600019846008026200079b565b1980831691505092915050565b6000620007d68383620007a8565b9150826002028217905092915050565b620007f182620005a5565b67ffffffffffffffff8111156200080d576200080c62000263565b5b620008198254620005df565b620008268282856200074b565b600060209050601f8311600181146200085e576000841562000849578287015190505b620008558582620007c8565b865550620008c5565b601f1984166200086e8662000614565b60005b82811015620008985784890151825560018201915060208501945060208101905062000871565b86831015620008b85784890151620008b4601f891682620007a8565b8355505b6001600288020188555050505b505050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b611c74806200090c6000396000f3fe608060405234801561001057600080fd5b50600436106101375760003560e01c8063715018a6116100b8578063a9f7d0b21161007c578063a9f7d0b2146102f6578063b7c58d7a14610312578063babcc5391461032e578063cd61a6091461035e578063f23a6e611461037c578063f2fde38b146103ac57610137565b8063715018a61461026257806373b2e80e1461026c5780638da5cb5b1461029c57806390e64d13146102ba5780639592a2cd146102d857610137565b80633d13f874116100ff5780633d13f874146101ce57806343f367c8146101ea5780634e16fc8b146102085780635edf7d8b1461022657806371127ed21461024457610137565b806301cb54c01461013c57806308af4d881461015a57806312065fe01461017657806332f08873146101945780633863b1f5146101b2575b600080fd5b6101446103c8565b6040516101519190610fee565b60405180910390f35b610174600480360381019061016f919061107b565b610473565b005b61017e61050d565b60405161018b91906110c1565b60405180910390f35b61019c6105b3565b6040516101a991906112b8565b60405180910390f35b6101cc60048036038101906101c79190611422565b6106d2565b005b6101e860048036038101906101e391906114f2565b6107ba565b005b6101f2610a75565b6040516101ff91906110c1565b60405180910390f35b610210610a7f565b60405161021d91906115b0565b60405180910390f35b61022e610abc565b60405161023b91906110c1565b60405180910390f35b61024c610ac6565b60405161025991906110c1565b60405180910390f35b61026a610ad0565b005b6102866004803603810190610281919061107b565b610ae4565b6040516102939190610fee565b60405180910390f35b6102a4610b3a565b6040516102b191906115e1565b60405180910390f35b6102c2610b63565b6040516102cf9190610fee565b60405180910390f35b6102e0610b6f565b6040516102ed9190610fee565b60405180910390f35b610310600480360381019061030b9190611422565b610b7d565b005b61032c6004803603810190610327919061107b565b610c65565b005b6103486004803603810190610343919061107b565b610cff565b6040516103559190610fee565b60405180910390f35b610366610d55565b60405161037391906110c1565b60405180910390f35b610396600480360381019061039191906116b1565b610d5f565b6040516103a39190611783565b60405180910390f35b6103c660048036038101906103c1919061107b565b610d8d565b005b6000600454600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1662fdd58e306006546040518363ffffffff1660e01b815260040161042b92919061179e565b602060405180830381865afa158015610448573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061046c91906117dc565b1015905090565b61047b610e13565b6001600960008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055507f5d20d7597e8195aa92d4ad63482761cfbbe7c4afdef190f27182702924c9af778160405161050291906115e1565b60405180910390a150565b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1662fdd58e306006546040518363ffffffff1660e01b815260040161056d92919061179e565b602060405180830381865afa15801561058a573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105ae91906117dc565b905090565b6105bb610f66565b604051806101000160405280600780546105d490611838565b80601f016020809104026020016040519081016040528092919081815260200182805461060090611838565b801561064d5780601f106106225761010080835404028352916020019161064d565b820191906000526020600020905b81548152906001019060200180831161063057829003601f168201915b505050505081526020013073ffffffffffffffffffffffffffffffffffffffff1681526020016002548152602001600354815260200160045481526020016005548152602001600860009054906101000a900460ff1660028111156106b5576106b461118a565b5b815260200160405180602001604052806000815250815250905090565b6106da610e13565b60005b81518110156107b6576001600960008484815181106106ff576106fe611869565b5b602002602001015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055507f5d20d7597e8195aa92d4ad63482761cfbbe7c4afdef190f27182702924c9af7782828151811061078c5761078b611869565b5b60200260200101516040516107a191906115e1565b60405180910390a180806001019150506106dd565b5050565b6107c2610e13565b6107cb84610cff565b61080a576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108019061190a565b60405180910390fd5b610812610b63565b15610852576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161084990611976565b60405180910390fd5b61085b84610ae4565b1561089b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161089290611a08565b60405180910390fd5b6108a3610b6f565b156108e3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108da90611a9a565b60405180910390fd5b6108eb6103c8565b61092a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161092190611b2c565b60405180910390fd5b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663f242432a30866006546004546040518563ffffffff1660e01b815260040161098f9493929190611b83565b600060405180830381600087803b1580156109a957600080fd5b505af11580156109bd573d6000803e3d6000fd5b50505050600454600360008282546109d59190611c0a565b925050819055506001600a60008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055507f47cee97cb7acd717b3c0aa1435d004cd5b3c8c57d70dbceb4e4458bbd60e39d484600454604051610a6792919061179e565b60405180910390a150505050565b6000600254905090565b60606040518060400160405280600f81526020017f6e6f7420696d706c656d656e7465640000000000000000000000000000000000815250905090565b6000600554905090565b6000600454905090565b610ad8610e13565b610ae26000610e9a565b565b6000600a60008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff169050919050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60004260055410905090565b600060045460035410905090565b610b85610e13565b60005b8151811015610c6157600060096000848481518110610baa57610ba9611869565b5b602002602001015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055507f5f1b0fa787087c297cc2ee3a7641860058ab750c330ac3ea5d6d5b9b777f353d828281518110610c3757610c36611869565b5b6020026020010151604051610c4c91906115e1565b60405180910390a18080600101915050610b88565b5050565b610c6d610e13565b6000600960008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055507f5f1b0fa787087c297cc2ee3a7641860058ab750c330ac3ea5d6d5b9b777f353d81604051610cf491906115e1565b60405180910390a150565b6000600960008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff169050919050565b6000600354905090565b60007ff23a6e612e1ff4830e658fe43f4e3cb4a5f8170bd5d9e69fb5d7a7fa9e4fdf97905095945050505050565b610d95610e13565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610e075760006040517f1e4fbdf7000000000000000000000000000000000000000000000000000000008152600401610dfe91906115e1565b60405180910390fd5b610e1081610e9a565b50565b610e1b610f5e565b73ffffffffffffffffffffffffffffffffffffffff16610e39610b3a565b73ffffffffffffffffffffffffffffffffffffffff1614610e9857610e5c610f5e565b6040517f118cdaa7000000000000000000000000000000000000000000000000000000008152600401610e8f91906115e1565b60405180910390fd5b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600033905090565b60405180610100016040528060608152602001600073ffffffffffffffffffffffffffffffffffffffff1681526020016000815260200160008152602001600081526020016000815260200160006002811115610fc657610fc561118a565b5b8152602001606081525090565b60008115159050919050565b610fe881610fd3565b82525050565b60006020820190506110036000830184610fdf565b92915050565b6000604051905090565b600080fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006110488261101d565b9050919050565b6110588161103d565b811461106357600080fd5b50565b6000813590506110758161104f565b92915050565b60006020828403121561109157611090611013565b5b600061109f84828501611066565b91505092915050565b6000819050919050565b6110bb816110a8565b82525050565b60006020820190506110d660008301846110b2565b92915050565b600081519050919050565b600082825260208201905092915050565b60005b838110156111165780820151818401526020810190506110fb565b60008484015250505050565b6000601f19601f8301169050919050565b600061113e826110dc565b61114881856110e7565b93506111588185602086016110f8565b61116181611122565b840191505092915050565b6111758161103d565b82525050565b611184816110a8565b82525050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b600381106111ca576111c961118a565b5b50565b60008190506111db826111b9565b919050565b60006111eb826111cd565b9050919050565b6111fb816111e0565b82525050565b600061010083016000830151848203600086015261121f8282611133565b9150506020830151611234602086018261116c565b506040830151611247604086018261117b565b50606083015161125a606086018261117b565b50608083015161126d608086018261117b565b5060a083015161128060a086018261117b565b5060c083015161129360c08601826111f2565b5060e083015184820360e08601526112ab8282611133565b9150508091505092915050565b600060208201905081810360008301526112d28184611201565b905092915050565b600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b61131782611122565b810181811067ffffffffffffffff82111715611336576113356112df565b5b80604052505050565b6000611349611009565b9050611355828261130e565b919050565b600067ffffffffffffffff821115611375576113746112df565b5b602082029050602081019050919050565b600080fd5b600061139e6113998461135a565b61133f565b905080838252602082019050602084028301858111156113c1576113c0611386565b5b835b818110156113ea57806113d68882611066565b8452602084019350506020810190506113c3565b5050509392505050565b600082601f830112611409576114086112da565b5b813561141984826020860161138b565b91505092915050565b60006020828403121561143857611437611013565b5b600082013567ffffffffffffffff81111561145657611455611018565b5b611462848285016113f4565b91505092915050565b611474816110a8565b811461147f57600080fd5b50565b6000813590506114918161146b565b92915050565b600080fd5b60008083601f8401126114b2576114b16112da565b5b8235905067ffffffffffffffff8111156114cf576114ce611497565b5b6020830191508360208202830111156114eb576114ea611386565b5b9250929050565b6000806000806060858703121561150c5761150b611013565b5b600061151a87828801611066565b945050602061152b87828801611482565b935050604085013567ffffffffffffffff81111561154c5761154b611018565b5b6115588782880161149c565b925092505092959194509250565b600082825260208201905092915050565b6000611582826110dc565b61158c8185611566565b935061159c8185602086016110f8565b6115a581611122565b840191505092915050565b600060208201905081810360008301526115ca8184611577565b905092915050565b6115db8161103d565b82525050565b60006020820190506115f660008301846115d2565b92915050565b600080fd5b600067ffffffffffffffff82111561161c5761161b6112df565b5b61162582611122565b9050602081019050919050565b82818337600083830152505050565b600061165461164f84611601565b61133f565b9050828152602081018484840111156116705761166f6115fc565b5b61167b848285611632565b509392505050565b600082601f830112611698576116976112da565b5b81356116a8848260208601611641565b91505092915050565b600080600080600060a086880312156116cd576116cc611013565b5b60006116db88828901611066565b95505060206116ec88828901611066565b94505060406116fd88828901611482565b935050606061170e88828901611482565b925050608086013567ffffffffffffffff81111561172f5761172e611018565b5b61173b88828901611683565b9150509295509295909350565b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b61177d81611748565b82525050565b60006020820190506117986000830184611774565b92915050565b60006040820190506117b360008301856115d2565b6117c060208301846110b2565b9392505050565b6000815190506117d68161146b565b92915050565b6000602082840312156117f2576117f1611013565b5b6000611800848285016117c7565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000600282049050600182168061185057607f821691505b60208210810361186357611862611809565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f41646472657373206e6f7420616c6c6f77656420746f20636c61696d2074686960008201527f732061697264726f700000000000000000000000000000000000000000000000602082015250565b60006118f4602983611566565b91506118ff82611898565b604082019050919050565b60006020820190508181036000830152611923816118e7565b9050919050565b7f41697264726f7020616c726561647920657870697265642e0000000000000000600082015250565b6000611960601883611566565b915061196b8261192a565b602082019050919050565b6000602082019050818103600083015261198f81611953565b9050919050565b7f4164647265737320616c726561647920636c61696d656420746869732061697260008201527f64726f702e000000000000000000000000000000000000000000000000000000602082015250565b60006119f2602583611566565b91506119fd82611996565b604082019050919050565b60006020820190508181036000830152611a21816119e5565b9050919050565b7f41697264726f7020686173206265656e20746f74616c6c7920636c61696d656460008201527f20616c72656164792e0000000000000000000000000000000000000000000000602082015250565b6000611a84602983611566565b9150611a8f82611a28565b604082019050919050565b60006020820190508181036000830152611ab381611a77565b9050919050565b7f41697264726f7020636f6e74726163742068617320696e73756666696369656e60008201527f7420746f6b656e2062616c616e63652e00000000000000000000000000000000602082015250565b6000611b16603083611566565b9150611b2182611aba565b604082019050919050565b60006020820190508181036000830152611b4581611b09565b9050919050565b600082825260208201905092915050565b50565b6000611b6d600083611b4c565b9150611b7882611b5d565b600082019050919050565b600060a082019050611b9860008301876115d2565b611ba560208301866115d2565b611bb260408301856110b2565b611bbf60608301846110b2565b8181036080830152611bd081611b60565b905095945050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000611c15826110a8565b9150611c20836110a8565b9250828203905081811115611c3857611c37611bdb565b5b9291505056fea2646970667358221220bd72319c10e3d3381b43e2670c4375cf0a3350cc3750c43744074c5d6087841164736f6c63430008180033";

type CustomAirdrop1155ConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: CustomAirdrop1155ConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class CustomAirdrop1155__factory extends ContractFactory {
  constructor(...args: CustomAirdrop1155ConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    airdropName: string,
    initialOwner: AddressLike,
    tokenAddress: AddressLike,
    tokenId: BigNumberish,
    totalAirdropAmount: BigNumberish,
    claimAmount: BigNumberish,
    expirationDate: BigNumberish,
    airdropType: BigNumberish,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(
      airdropName,
      initialOwner,
      tokenAddress,
      tokenId,
      totalAirdropAmount,
      claimAmount,
      expirationDate,
      airdropType,
      overrides || {}
    );
  }
  override deploy(
    airdropName: string,
    initialOwner: AddressLike,
    tokenAddress: AddressLike,
    tokenId: BigNumberish,
    totalAirdropAmount: BigNumberish,
    claimAmount: BigNumberish,
    expirationDate: BigNumberish,
    airdropType: BigNumberish,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(
      airdropName,
      initialOwner,
      tokenAddress,
      tokenId,
      totalAirdropAmount,
      claimAmount,
      expirationDate,
      airdropType,
      overrides || {}
    ) as Promise<
      CustomAirdrop1155 & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): CustomAirdrop1155__factory {
    return super.connect(runner) as CustomAirdrop1155__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): CustomAirdrop1155Interface {
    return new Interface(_abi) as CustomAirdrop1155Interface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): CustomAirdrop1155 {
    return new Contract(address, _abi, runner) as unknown as CustomAirdrop1155;
  }
}
